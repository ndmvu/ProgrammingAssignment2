getwd()
dir()
makeCacheMatrix <- function(a = matrix()) {
  invrt <- NULL
  set <- function(b) {
    a <<- b
    invrt <<- NULL
  }
  get <- function() a
  setinvrt <- function(inverse) invrt <<- inverse
  getinvrt <- function() invrt
  list(set = set, get = get, setinvrt = setinvrt, getinvrt = getinvrt)
}
## function cacheSolve computes the inverse of <matrix> object which is 
## returned by makeCacheMatrix function. 
## If the inverse is  already computed and there is no change in matrix,
## then this function retrives cached inverse. 
cacheSolve <- function(a, ...) {
## Returns inverse of  matrix <a>
  invrt <- a$getinvrt()
  if(!is.null(invrt)) {
    message("avquiring cached contents")
    return(invrt)
  }
  data <- a$get()
  invrt <- solve(data, ...)
  a$setinvrt(invrt)
  invrt
}
mat <- matrix(rnorm(25),5,5)
mct <- makeCacheMatrix(mat)
cacheSolve(mct)
q()
